(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,"\n:root{\n    --color-1: #333333;\n    --color-2: #888888;\n    --color-3: #dddddd;\n    --color-4: #EEEEEE;\n}\n\nbody{\n    margin: 0px;\n    min-height: 100vh;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n/* Main Content Container */\n\n#content{\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header */\n\nheader{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100px;\n    font-size: 50px;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n/* Main */\n\nmain{\n    display: flex;\n\n    flex-grow: 1;\n}\n\n/* Sidebar (Project selection) */\n\n.sidebar{\n    display: flex;\n    flex-direction: column;\n\n    box-sizing: border-box;\n    padding: 30px;\n    width: 250px;\n    font-size: 2rem;\n\n    background-color: var(--color-3);\n}\n\n.sidebar-header{\n    display: flex;\n    gap: 5px;\n\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.sidebar-logo{\n    margin-top: 5px;\n    margin-left: -2px;\n    font-size: 30px;\n}\n\n.sidebar-title{\n    font-size: 2rem;\n}\n\n.project-container{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    font-size: 1.5rem;\n}\n\n.project{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    width: 150px;\n}\n\n.project:hover{\n    font-weight: 600;\n}\n\n.list{\n    margin-top: 2px;\n}\n\n.project-name{\n}\n\n.project-add{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: 20px;\n}\n\n.project-add:hover{\n    font-weight: 600;\n}\n\n/* Hidden/Pop-up Project Form */\n\n.project-form{\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    display: none;\n}\n\n#project-input{\n    box-sizing: border-box;\n\n    width: 190px;\n    padding: 5px;\n    border: 0px;\n}\n\n#project-input:focus{\n    outline: none;\n}\n\n.project-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n    width: 190px;\n}\n\n.project-button{\n    display: flex;\n    justify-content: center;\n\n    width: 75px;\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-project{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-project:hover{\n    background-color: lime;\n}\n\n.cancel-project{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-project:hover{\n    background-color: red;\n}\n\n/* Main project display */\n\n.main-content{\n    padding: 30px;\n    padding-left: 50px;\n\n    flex-grow: 1;\n}\n\n.project-title{\n    font-size: 2.5rem;\n    font-weight: bold;\n}\n\n.todo-list{\n    padding: 20px;\n}\n\n.task{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 1.5rem;\n    padding: 10px;\n\n    border-radius: 20px;\n}\n\n.task:hover{\n    background-color: var(--color-3);\n}\n\n\n.task-circle{\n    cursor: pointer;\n    transition-duration: .3s;\n}\n\n.task-circle:hover{\n    font-weight: bolder;\n}\n\n.task-text{\n\n}\n\n.todo-add{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 30px;\n\n    border-radius: 20px;\n}\n\n.todo-add:hover{\n    background-color: var(--color-3);\n}\n\n/* X (delete) button */\n\n.task-x{\n    cursor: pointer;\n    display: none;\n\n    font-size: 1rem;\n    margin-bottom: 3px;\n    margin-left: auto;\n    margin-right: 5px;\n\n    transition-duration: .5s;\n}\n\n.task-x:hover{\n    transform: scale(1.3);\n}\n\n.task:hover .task-x{\n    display: inline-block;\n}\n\n/* Footer */\n\nfooter{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    height: 75px;\n    font-size: 1.5rem;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n.footer-logo{\n    margin-top: 5px;\n}\n\n.footer-github{\n    height: 30px;\n    margin-top: 4px;\n    margin-left: 4px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:";AACA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,qGAAqG;AACzG;;AAEA,2BAA2B;;AAE3B;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,aAAa;IACb,eAAe;IACf,gCAAgC;IAChC;AACJ;;AAEA,SAAS;;AAET;IACI,aAAa;;IAEb,YAAY;AAChB;;AAEA,gCAAgC;;AAEhC;IACI,aAAa;IACb,sBAAsB;;IAEtB,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,eAAe;;IAEf,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,QAAQ;;IAER,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;;IAET,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;AACA;;AAEA;IACI,aAAa;IACb,SAAS;;IAET,eAAe;IACf,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA,+BAA+B;;AAE/B;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,aAAa;AACjB;;AAEA;IACI,sBAAsB;;IAEtB,YAAY;IACZ,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;;IAET,eAAe;IACf,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;;IAEvB,WAAW;IACX,aAAa;;IAEb,kBAAkB;AACtB;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,qBAAqB;AACzB;;AAEA,yBAAyB;;AAEzB;IACI,aAAa;IACb,kBAAkB;;IAElB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,iBAAiB;IACjB,aAAa;;IAEb,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;AACpC;;;AAGA;IACI,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;AAEA;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,kBAAkB;;IAElB,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;AACpC;;AAEA,sBAAsB;;AAEtB;IACI,eAAe;IACf,aAAa;;IAEb,eAAe;IACf,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;;IAEjB,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;;IAER,YAAY;IACZ,iBAAiB;IACjB,gCAAgC;IAChC;AACJ;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB",sourcesContent:["\n:root{\n    --color-1: #333333;\n    --color-2: #888888;\n    --color-3: #dddddd;\n    --color-4: #EEEEEE;\n}\n\nbody{\n    margin: 0px;\n    min-height: 100vh;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n/* Main Content Container */\n\n#content{\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header */\n\nheader{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100px;\n    font-size: 50px;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n/* Main */\n\nmain{\n    display: flex;\n\n    flex-grow: 1;\n}\n\n/* Sidebar (Project selection) */\n\n.sidebar{\n    display: flex;\n    flex-direction: column;\n\n    box-sizing: border-box;\n    padding: 30px;\n    width: 250px;\n    font-size: 2rem;\n\n    background-color: var(--color-3);\n}\n\n.sidebar-header{\n    display: flex;\n    gap: 5px;\n\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.sidebar-logo{\n    margin-top: 5px;\n    margin-left: -2px;\n    font-size: 30px;\n}\n\n.sidebar-title{\n    font-size: 2rem;\n}\n\n.project-container{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    font-size: 1.5rem;\n}\n\n.project{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    width: 150px;\n}\n\n.project:hover{\n    font-weight: 600;\n}\n\n.list{\n    margin-top: 2px;\n}\n\n.project-name{\n}\n\n.project-add{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: 20px;\n}\n\n.project-add:hover{\n    font-weight: 600;\n}\n\n/* Hidden/Pop-up Project Form */\n\n.project-form{\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    display: none;\n}\n\n#project-input{\n    box-sizing: border-box;\n\n    width: 190px;\n    padding: 5px;\n    border: 0px;\n}\n\n#project-input:focus{\n    outline: none;\n}\n\n.project-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n    width: 190px;\n}\n\n.project-button{\n    display: flex;\n    justify-content: center;\n\n    width: 75px;\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-project{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-project:hover{\n    background-color: lime;\n}\n\n.cancel-project{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-project:hover{\n    background-color: red;\n}\n\n/* Main project display */\n\n.main-content{\n    padding: 30px;\n    padding-left: 50px;\n\n    flex-grow: 1;\n}\n\n.project-title{\n    font-size: 2.5rem;\n    font-weight: bold;\n}\n\n.todo-list{\n    padding: 20px;\n}\n\n.task{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 1.5rem;\n    padding: 10px;\n\n    border-radius: 20px;\n}\n\n.task:hover{\n    background-color: var(--color-3);\n}\n\n\n.task-circle{\n    cursor: pointer;\n    transition-duration: .3s;\n}\n\n.task-circle:hover{\n    font-weight: bolder;\n}\n\n.task-text{\n\n}\n\n.todo-add{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 30px;\n\n    border-radius: 20px;\n}\n\n.todo-add:hover{\n    background-color: var(--color-3);\n}\n\n/* X (delete) button */\n\n.task-x{\n    cursor: pointer;\n    display: none;\n\n    font-size: 1rem;\n    margin-bottom: 3px;\n    margin-left: auto;\n    margin-right: 5px;\n\n    transition-duration: .5s;\n}\n\n.task-x:hover{\n    transform: scale(1.3);\n}\n\n.task:hover .task-x{\n    display: inline-block;\n}\n\n/* Footer */\n\nfooter{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    height: 75px;\n    font-size: 1.5rem;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n.footer-logo{\n    margin-top: 5px;\n}\n\n.footer-github{\n    height: 30px;\n    margin-top: 4px;\n    margin-left: 4px;\n}\n\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var p=0;p<n.length;p++){var s=[].concat(n[p]);o&&a[s[0]]||(void 0!==A&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=A),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},a=[],i=0;i<n.length;i++){var c=n[i],p=o.base?c[0]+o.base:c[0],s=A[p]||0,l="".concat(p," ").concat(s);A[p]=s+1;var d=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var c=o(n,r),p=0;p<A.length;p++){var s=t(A[p]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),a=t.n(A),i=t(565),c=t.n(i),p=t(216),s=t.n(p),l=t(589),d=t.n(l),u=t(426),f={};f.styleTagTransform=d(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const C=t.p+"925aa8e685ab0217bb34.png",g=(()=>{let n=function(){let n=[];return n.push({name:"Default",todos:[]}),n}();function e(e){n.push(e)}return{projectList:n,createProject:function(n){e({name:n,todos:[]})},appendProject:e}})(),B=g,m=(()=>{let n=document.querySelector(".project-add"),e=document.querySelector(".project-form"),t=document.querySelector(".cancel-project"),o=document.querySelector(".confirm-project"),r=document.getElementById("project-input"),A=document.querySelector(".project-container"),a=function(){n.style.display="flex",e.style.display="none"},i=function(){n.style.display="none",e.style.display="flex"};function c(n){let e=document.createElement("div");e.classList.add("project");let t=document.createElement("span");t.classList.add("material-symbols-outlined"),t.classList.add("list"),t.textContent="list";let o=document.createElement("div");o.classList.add("project-name"),o.textContent=n.name,e.appendChild(t),e.appendChild(o),A.appendChild(e)}function p(){A.innerHTML="",B.projectList.forEach(c)}return{activateProjectButtons:function(){n.addEventListener("click",i),t.addEventListener("click",a),o.addEventListener("click",(()=>{B.createProject(r.value),a(),p()}))},populateProjects:p}})();document.querySelector(".footer-github").src=C,m.activateProjectButtons(),m.populateProjects()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,