(()=>{"use strict";var n={556:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,"/* Main */\n\nmain{\n    display: flex;\n\n    flex-grow: 1;\n}\n\n\n/* Main project display */\n\n\n\n.main-content{\n    padding: 30px;\n    padding-left: 50px;\n\n    flex-grow: 1;\n}\n\n.home-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.home-text{\n    font-size: 2.5rem;\n    text-align: center;\n}\n\n.cat-image{\n   width: 100%;\n   margin-right: 50px;\n   max-width: 600px;\n}\n\n.working-container{\n    display: none;\n}\n\n\n.project-title{\n    font-size: 2.5rem;\n    font-weight: bold;\n}\n\n.todo-list{\n    padding: 20px;\n}\n\n.task{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 1.5rem;\n    padding: 10px;\n\n    border-radius: 20px;\n}\n\n.task:hover{\n    background-color: var(--color-3);\n}\n\n\n.task-circle{\n    cursor: pointer;\n    transition-duration: .3s;\n}\n\n.task-circle:hover{\n    font-weight: bolder;\n}\n\n.task-text{\n\n}\n\n.todo-add{\n    display: none;\n    align-items: center;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 30px;\n\n    border-radius: 20px;\n}\n\n.todo-add:hover{\n    background-color: var(--color-3);\n}\n\n.todo-form{\n    display: none;\n    flex-direction: column;\n    gap: 10px;\n\n    padding: 10px;\n    padding-left: 30px;\n}\n\n#todo-input{\n    box-sizing: border-box;\n    background-color: var(--color-3);\n\n    padding: 10px;\n    border: 0px;\n}\n\n#todo-input:focus{\n    outline: none;\n}\n\n.todo-form-error{\n    display: none;\n\n    padding: 5px;\n    text-align: center;\n    font-size: 1rem;\n    color: rgb(150, 0, 0);\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.todo-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n}\n\n.todo-button{\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n\n    width: 75px;\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-todo{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-todo:hover{\n    background-color: lime;\n}\n\n.cancel-todo{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-todo:hover{\n    background-color: red;\n}\n\n/* X (delete) button */\n\n.task-x{\n    cursor: pointer;\n    display: none;\n\n    font-size: 1rem;\n    margin-bottom: 3px;\n    margin-left: auto;\n    margin-right: 5px;\n\n    transition-duration: .5s;\n}\n\n.task-x:hover{\n    transform: scale(1.3);\n}\n\n.task:hover .task-x{\n    display: inline-block;\n}","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAAA,SAAS;;AAET;IACI,aAAa;;IAEb,YAAY;AAChB;;;AAGA,yBAAyB;;;;AAIzB;IACI,aAAa;IACb,kBAAkB;;IAElB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;GACG,WAAW;GACX,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,aAAa;AACjB;;;AAGA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,iBAAiB;IACjB,aAAa;;IAEb,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;AACpC;;;AAGA;IACI,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;AAEA;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,kBAAkB;;IAElB,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,gCAAgC;;IAEhC,aAAa;IACb,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;;IAEb,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;;IAET,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,YAAY;;IAEZ,WAAW;IACX,aAAa;;IAEb,kBAAkB;AACtB;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,qBAAqB;AACzB;;AAEA,sBAAsB;;AAEtB;IACI,eAAe;IACf,aAAa;;IAEb,eAAe;IACf,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;;IAEjB,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/* Main */\n\nmain{\n    display: flex;\n\n    flex-grow: 1;\n}\n\n\n/* Main project display */\n\n\n\n.main-content{\n    padding: 30px;\n    padding-left: 50px;\n\n    flex-grow: 1;\n}\n\n.home-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.home-text{\n    font-size: 2.5rem;\n    text-align: center;\n}\n\n.cat-image{\n   width: 100%;\n   margin-right: 50px;\n   max-width: 600px;\n}\n\n.working-container{\n    display: none;\n}\n\n\n.project-title{\n    font-size: 2.5rem;\n    font-weight: bold;\n}\n\n.todo-list{\n    padding: 20px;\n}\n\n.task{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 1.5rem;\n    padding: 10px;\n\n    border-radius: 20px;\n}\n\n.task:hover{\n    background-color: var(--color-3);\n}\n\n\n.task-circle{\n    cursor: pointer;\n    transition-duration: .3s;\n}\n\n.task-circle:hover{\n    font-weight: bolder;\n}\n\n.task-text{\n\n}\n\n.todo-add{\n    display: none;\n    align-items: center;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 30px;\n\n    border-radius: 20px;\n}\n\n.todo-add:hover{\n    background-color: var(--color-3);\n}\n\n.todo-form{\n    display: none;\n    flex-direction: column;\n    gap: 10px;\n\n    padding: 10px;\n    padding-left: 30px;\n}\n\n#todo-input{\n    box-sizing: border-box;\n    background-color: var(--color-3);\n\n    padding: 10px;\n    border: 0px;\n}\n\n#todo-input:focus{\n    outline: none;\n}\n\n.todo-form-error{\n    display: none;\n\n    padding: 5px;\n    text-align: center;\n    font-size: 1rem;\n    color: rgb(150, 0, 0);\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.todo-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n}\n\n.todo-button{\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n\n    width: 75px;\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-todo{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-todo:hover{\n    background-color: lime;\n}\n\n.cancel-todo{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-todo:hover{\n    background-color: red;\n}\n\n/* X (delete) button */\n\n.task-x{\n    cursor: pointer;\n    display: none;\n\n    font-size: 1rem;\n    margin-bottom: 3px;\n    margin-left: auto;\n    margin-right: 5px;\n\n    transition-duration: .5s;\n}\n\n.task-x:hover{\n    transform: scale(1.3);\n}\n\n.task:hover .task-x{\n    display: inline-block;\n}"],sourceRoot:""}]);const i=a},93:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,"/* Sidebar (Project selection) */\n\n.sidebar{\n    display: flex;\n    flex-direction: column;\n\n    box-sizing: border-box;\n    padding: 30px;\n    width: 250px;\n    font-size: 2rem;\n\n    background-color: var(--color-3);\n}\n\n.sidebar-header{\n    display: flex;\n    gap: 5px;\n\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.sidebar-logo{\n    margin-top: 5px;\n    margin-left: -2px;\n    font-size: 30px;\n}\n\n.sidebar-title{\n    font-size: 2rem;\n}\n\n.project-container{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    font-size: 1.5rem;\n}\n\n.project-wrapper{\n    display: flex;\n    justify-content: space-between;\n\n    width: 100%;\n}\n\n.project{\n    align-self: center;\n\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    width: 150px;\n}\n\n/* .project:hover{\n    font-weight: 600;\n} */\n\n.list{\n    margin-top: 2px;\n}\n\n.project-name{\n}\n\n.project-x{\n    cursor: pointer;\n\n    align-self: center;\n    font-size: 20px;\n    margin-bottom: 4px;\n}\n\n.project.active{\n    font-weight: bold;\n}\n\n.project-add{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: 20px;\n}\n\n/* .project-add:hover{\n    font-weight: 600;\n} */\n\n/* Hidden/Pop-up Project Form */\n\n.project-form{\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    display: none;\n}\n\n\n#project-input{\n    box-sizing: border-box;\n\n    padding: 5px;\n    border: 0px;\n}\n\n#project-input:focus{\n    outline: none;\n}\n\n.project-form-error{\n    display: none;\n\n    padding: 5px;\n    text-align: center;\n    font-size: 1rem;\n    color: rgb(150, 0, 0);\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.project-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n}\n\n.project-button{\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-project{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-project:hover{\n    background-color: lime;\n}\n\n.cancel-project{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-project:hover{\n    background-color: red;\n}","",{version:3,sources:["webpack://./src/css/sidebar.css"],names:[],mappings:"AAAA,gCAAgC;;AAEhC;IACI,aAAa;IACb,sBAAsB;;IAEtB,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,eAAe;;IAEf,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,QAAQ;;IAER,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,WAAW;AACf;;AAEA;IACI,kBAAkB;;IAElB,aAAa;IACb,SAAS;;IAET,eAAe;IACf,YAAY;AAChB;;AAEA;;GAEG;;AAEH;IACI,eAAe;AACnB;;AAEA;AACA;;AAEA;IACI,eAAe;;IAEf,kBAAkB;IAClB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;;IAET,eAAe;IACf,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;;GAEG;;AAEH,+BAA+B;;AAE/B;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,aAAa;AACjB;;;AAGA;IACI,sBAAsB;;IAEtB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;;IAEb,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;;IAET,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,YAAY;;IAEZ,aAAa;;IAEb,kBAAkB;AACtB;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/* Sidebar (Project selection) */\n\n.sidebar{\n    display: flex;\n    flex-direction: column;\n\n    box-sizing: border-box;\n    padding: 30px;\n    width: 250px;\n    font-size: 2rem;\n\n    background-color: var(--color-3);\n}\n\n.sidebar-header{\n    display: flex;\n    gap: 5px;\n\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.sidebar-logo{\n    margin-top: 5px;\n    margin-left: -2px;\n    font-size: 30px;\n}\n\n.sidebar-title{\n    font-size: 2rem;\n}\n\n.project-container{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    font-size: 1.5rem;\n}\n\n.project-wrapper{\n    display: flex;\n    justify-content: space-between;\n\n    width: 100%;\n}\n\n.project{\n    align-self: center;\n\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    width: 150px;\n}\n\n/* .project:hover{\n    font-weight: 600;\n} */\n\n.list{\n    margin-top: 2px;\n}\n\n.project-name{\n}\n\n.project-x{\n    cursor: pointer;\n\n    align-self: center;\n    font-size: 20px;\n    margin-bottom: 4px;\n}\n\n.project.active{\n    font-weight: bold;\n}\n\n.project-add{\n    display: flex;\n    gap: 10px;\n\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: 20px;\n}\n\n/* .project-add:hover{\n    font-weight: 600;\n} */\n\n/* Hidden/Pop-up Project Form */\n\n.project-form{\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    display: none;\n}\n\n\n#project-input{\n    box-sizing: border-box;\n\n    padding: 5px;\n    border: 0px;\n}\n\n#project-input:focus{\n    outline: none;\n}\n\n.project-form-error{\n    display: none;\n\n    padding: 5px;\n    text-align: center;\n    font-size: 1rem;\n    color: rgb(150, 0, 0);\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.project-form-buttons{\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n\n    cursor: pointer;\n    font-size: 1rem;\n}\n\n.project-button{\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n\n    padding: 10px;\n\n    border-radius: 5px;\n}\n\n.confirm-project{\n    background-color: rgba(0, 255, 0, 0.5);\n}\n\n.confirm-project:hover{\n    background-color: lime;\n}\n\n.cancel-project{\n    background-color: rgba(255, 0, 0, 0.5);\n}\n\n.cancel-project:hover{\n    background-color: red;\n}"],sourceRoot:""}]);const i=a},341:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,"\n:root{\n    --color-1: #333333;\n    --color-2: #888888;\n    --color-3: #dddddd;\n    --color-4: #EEEEEE;\n}\n\nbody{\n    margin: 0px;\n    min-height: 100vh;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n/* Main Content Container */\n\n#content{\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header */\n\nheader{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100px;\n    font-size: 50px;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n\n\n/* Footer */\n\nfooter{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    height: 75px;\n    font-size: 1.5rem;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n.footer-logo{\n    margin-top: 5px;\n}\n\n.footer-github{\n    height: 30px;\n    margin-top: 4px;\n    margin-left: 4px;\n}\n\n","",{version:3,sources:["webpack://./src/css/skeleton.css"],names:[],mappings:";AACA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,qGAAqG;AACzG;;AAEA,2BAA2B;;AAE3B;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,aAAa;IACb,eAAe;IACf,gCAAgC;IAChC;AACJ;;;;AAIA,WAAW;;AAEX;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;;IAER,YAAY;IACZ,iBAAiB;IACjB,gCAAgC;IAChC;AACJ;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB",sourcesContent:["\n:root{\n    --color-1: #333333;\n    --color-2: #888888;\n    --color-3: #dddddd;\n    --color-4: #EEEEEE;\n}\n\nbody{\n    margin: 0px;\n    min-height: 100vh;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n/* Main Content Container */\n\n#content{\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header */\n\nheader{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100px;\n    font-size: 50px;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n\n\n/* Footer */\n\nfooter{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    height: 75px;\n    font-size: 1.5rem;\n    background-color: var(--color-1);\n    color: var(--color-4)\n}\n\n.footer-logo{\n    margin-top: 5px;\n}\n\n.footer-github{\n    height: 30px;\n    margin-top: 4px;\n    margin-left: 4px;\n}\n\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&a[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},a=[],i=0;i<n.length;i++){var c=n[i],s=o.base?c[0]+o.base:c[0],l=A[s]||0,d="".concat(s," ").concat(l);A[s]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var c=o(n,r),s=0;s<A.length;s++){var l=t(A[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),a=t.n(A),i=t(565),c=t.n(i),s=t(216),l=t.n(s),d=t(589),p=t.n(d),u=t(341),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(93),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=a().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var g=t(556),B={};B.styleTagTransform=p(),B.setAttributes=c(),B.insert=a().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),e()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;const x=t.p+"925aa8e685ab0217bb34.png",I=t.p+"9b48e6550fba0768a60b.png",b=(()=>{let n=[];return{projectList:n,createProject:function(e){let t={name:e,todos:[]};return function(e){n.push(e)}(t),t},removeProject:function(e){return n=n.filter((function(n){return n!=e})),n},createTodo:function(n,e){!function(n,e){e.todos.push(n)}({name:n},e)},validateProjectName:function(e){return n.some((n=>n.name===e))},validateTodoName:function(n,e){return e.todos.some((e=>e.name===n))}}})(),y=function(){let n=document.createElement("div");return n.classList.add("project-wrapper"),n},h=function(){let n=document.createElement("div");return n.classList.add("project"),n},v=function(){let n=document.createElement("span");return n.classList.add("material-symbols-outlined"),n.classList.add("list"),n.textContent="list",n},E=function(n){let e=document.createElement("div");return e.classList.add("project-name"),e.textContent=n.name,e},j=function(){let n=document.createElement("span");return n.classList.add("material-symbols-outlined"),n.classList.add("project-x"),n.textContent="x",n},k=function(){let n=document.createElement("div");return n.classList.add("task"),n},w=function(){let n=document.createElement("span");return n.classList.add("material-symbols-outlined"),n.classList.add("task-circle"),n.textContent="circle",n},S=function(n){let e=document.createElement("div");return e.classList.add("task-text"),e.textContent=n.name,e},z=function(){let n=document.createElement("span");return n.classList.add("material-symbols-outlined"),n.classList.add("task-x"),n.textContent="x",n},L=(()=>{let n=document.querySelector(".project-add"),e=document.querySelector(".project-form"),t=document.querySelector(".project-form-error"),o=document.querySelector(".cancel-project"),r=document.querySelector(".confirm-project"),A=document.getElementById("project-input"),a=document.querySelector(".project-container"),i=document.querySelector(".project-title"),c=document.querySelector(".todo-list"),s=document.querySelector(".todo-add"),l=document.querySelector(".cancel-todo"),d=document.querySelector(".confirm-todo"),p=document.querySelector(".todo-form"),u=document.querySelector(".todo-form-error"),f=document.getElementById("todo-input"),m=document.querySelector(".home-container"),C=document.querySelector(".working-container"),g=5,B=function(){n.style.display="flex",e.style.display="none",t.style.display="none"},x=function(){n.style.display="none",e.style.display="flex"},I=function(n){return n.preventDefault(),A.value.length>10||A.value.length<1?(t.textContent="Project names must be between 1 and 10 characters",void(t.style.display="block")):b.validateProjectName(A.value)?(t.textContent="Project names must be unique",void(t.style.display="block")):(b.createProject(A.value),B(),L(b.projectList.at(-1)),A.value="",void(t.style.display="none"))};function L(n){let e=y(),t=h();!function(n){n.addEventListener("click",P),n.addEventListener("click",Z)}(t);let o=v(),r=E(n),A=j();A.addEventListener("click",(function(){q(n),T(e),i.textContent==n.name&&0==b.projectList.length?(m.style.display="flex",C.style.display="none"):i.textContent==n.name&&document.querySelector(".project").click()})),t.appendChild(o),t.appendChild(r),e.appendChild(t),e.appendChild(A),a.appendChild(e)}let q=function(n){b.projectList=b.removeProject(n)},T=function(n){n.parentNode.removeChild(n)};let P=function(){document.querySelectorAll(".project").forEach((n=>n.closest(".project").classList.remove("active"))),this.classList.add("active")},Z=function(){let n=this.querySelector(".project-name").textContent;i.textContent=n,function(){for(;c.firstChild;)c.removeChild(c.firstChild)}(),g=b.projectList.find((e=>e.name==n)),g.todos.forEach(Y),s.style.display="flex",m.style.display="none",C.style.display="block"},Y=function(n){let e=k(),t=w(),o=S(n),r=z();r.addEventListener("click",(function(){G(n),M(r)})),e.appendChild(t),e.appendChild(o),e.appendChild(r),c.appendChild(e)},G=function(n){g.todos=g.todos.filter((function(e){return e!=n}))},M=function(n){let e=n.closest(".task");e.parentNode.removeChild(e)},W=function(){s.style.display="none",p.style.display="flex"},N=function(){s.style.display="flex",p.style.display="none",u.style.display="none"},R=function(n){return n.preventDefault(),f.value.length>20||f.value.length<1?(u.textContent="Todo names must be between 1 and 20 characters",void(u.style.display="block")):b.validateTodoName(f.value,g)?(u.textContent="Todo names must be unique",void(u.style.display="block")):(b.createTodo(f.value,g),N(),Y(g.todos.at(-1)),f.value="",void(u.style.display="none"))};return{PageLoad:function(){n.addEventListener("click",x),o.addEventListener("click",B),r.addEventListener("click",I),e.addEventListener("submit",I),function(){for(;a.firstChild;)a.removeChild(a.firstChild)}(),b.projectList.forEach(L),s.addEventListener("click",W),l.addEventListener("click",N),d.addEventListener("click",R),p.addEventListener("submit",R)}}})();document.querySelector(".footer-github").src=x,document.querySelector(".cat-image").src=I,L.PageLoad()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,